#lang racket
(require graphics/graphics)
(open-graphics)
(define board (open-viewport "Memorama" 600 600))
((draw-pixmap board) "TableroAjedrez.png" (make-posn 0 0))
(define (DrawPiezes positions counter)
    (define mainPosition positions)
    (define colorCube "0101010110101010010101011010101001010101101010100101010110101010")
    (if (< counter (string-length mainPosition))
        (if (equal? (string-ref mainPosition counter) #\T)
            (if (equal? (string-ref colorCube counter) #\1)
                ((draw-pixmap board) "piezasAjedrez/TBc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                ((draw-pixmap board) "piezasAjedrez/TBb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
            )
            (if (equal? (string-ref mainPosition counter) #\C)
                (if (equal? (string-ref colorCube counter) #\1)
                    ((draw-pixmap board) "piezasAjedrez/CBc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                    ((draw-pixmap board) "piezasAjedrez/CBb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                )
                (if (equal? (string-ref mainPosition counter) #\A)
                    (if (equal? (string-ref colorCube counter) #\1)
                        ((draw-pixmap board) "piezasAjedrez/AlBc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                        ((draw-pixmap board) "piezasAjedrez/AlBb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                    )
                    (if (equal? (string-ref mainPosition counter) #\R)
                        (if (equal? (string-ref colorCube counter) #\1)
                            ((draw-pixmap board) "piezasAjedrez/RaBc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                            ((draw-pixmap board) "piezasAjedrez/RaBb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                        )
                        (if (equal? (string-ref mainPosition counter) #\Y)
                            (if (equal? (string-ref colorCube counter) #\1)
                                ((draw-pixmap board) "piezasAjedrez/RyBc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                ((draw-pixmap board) "piezasAjedrez/RyBb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                            )
                            (if (equal? (string-ref mainPosition counter) #\P)
                                (if (equal? (string-ref colorCube counter) #\1)
                                    ((draw-pixmap board) "piezasAjedrez/PnBc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                    ((draw-pixmap board) "piezasAjedrez/PnBb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                )
                                (if (equal? (string-ref mainPosition counter) #\t)
                                    (if (equal? (string-ref colorCube counter) #\1)
                                        ((draw-pixmap board) "piezasAjedrez/TWc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                        ((draw-pixmap board) "piezasAjedrez/TWb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                    )
                                    (if (equal? (string-ref mainPosition counter) #\c)
                                        (if (equal? (string-ref colorCube counter) #\1)
                                            ((draw-pixmap board) "piezasAjedrez/CWc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                            ((draw-pixmap board) "piezasAjedrez/CWb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                        )
                                        (if (equal? (string-ref mainPosition counter) #\a)
                                            (if (equal? (string-ref colorCube counter) #\1)
                                                ((draw-pixmap board) "piezasAjedrez/AlWc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                                ((draw-pixmap board) "piezasAjedrez/AlWb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                            )
                                            (if (equal? (string-ref mainPosition counter) #\r)
                                                (if (equal? (string-ref colorCube counter) #\1)
                                                    ((draw-pixmap board) "piezasAjedrez/RaWc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                                    ((draw-pixmap board) "piezasAjedrez/RaWb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                                )
                                                (if (equal? (string-ref mainPosition counter) #\y)
                                                    (if (equal? (string-ref colorCube counter) #\1)
                                                        ((draw-pixmap board) "piezasAjedrez/RyWc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                                        ((draw-pixmap board) "piezasAjedrez/RyWb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                                    )
                                                    (if (equal? (string-ref mainPosition counter) #\p)
                                                        (if (equal? (string-ref colorCube counter) #\1)
                                                            ((draw-pixmap board) "piezasAjedrez/PnWc.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                                            ((draw-pixmap board) "piezasAjedrez/PnWb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                                        )
                                                        (if (equal? (string-ref mainPosition counter) #\-)
                                                            (if (equal? (string-ref colorCube counter) #\1)
                                                                ((draw-pixmap board) "piezasAjedrez/Tapec.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                                                ((draw-pixmap board) "piezasAjedrez/Tapeb.png" (make-posn (+ 100 (* (remainder counter 8) 50)) (+ 100 (* (quotient counter 8) 50))))
                                                            )
                                                            (void)
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
        (void)
    )
    (if (< counter 63)
        (DrawPiezes mainPosition (+ counter 1))
        (void)
    )
    (GetPosition mainPosition 0 #\L 0 0)
)
(define (GetPosition pieces preIndex prePieze preX preY)
    (define position (mouse-click-posn (get-mouse-click board)))
    (define positionX (quotient (- (posn-x position) 100) 50))
    (define positionY (quotient (- (posn-y position) 100) 50))
    (define index (+ positionX (* positionY 8)))
    (define pieze (string-ref pieces index))
    (PlayGame pieces pieze index prePieze preIndex preX positionX preY positionY)
)
(define (PlayGame positions selectPieze selectPiezeIndex prePieze preIndex preX posX preY posY)
    (if (and (equal? prePieze #\L) (= preIndex 0))
        (GetPosition positions selectPiezeIndex selectPieze posX posY)
        (if (equal? prePieze #\P)
            (MovePeon positions selectPiezeIndex preIndex #\P preX posX preY posY)
            (if (equal? prePieze #\p)
                (MovePeon positions selectPiezeIndex preIndex #\p preX posX preY posY)
                (if (equal? prePieze #\T)
                    (MoveTorre positions selectPiezeIndex preIndex #\T preX posX preY posY)
                    (if (equal? prePieze #\t)
                        (MoveTorre positions selectPiezeIndex preIndex #\t preX posX preY posY)
                        (begin
                            (display "no es torre")
                            (GetPosition positions 0 #\L 0 0)
                        )
                    )
                )
            )
        )
    )
)
(define (MoveTorre positions selectPiezeIndex preIndex key preX posX preY posY)
    (if (= preX posX)
        (if (< posY preY)
            (if (equal? (string-ref positions selectPiezeIndex) #\-)
                (if (equal? key #\T)
                    (DrawPiezes (string-append (substring positions 0 selectPiezeIndex) "T" (substring positions (+ 1 selectPiezeIndex) preIndex) "-" (substring positions (+ preIndex 1) (string-length positions))) 0)
                    (DrawPiezes (string-append (substring positions 0 selectPiezeIndex) "t" (substring positions (+ 1 selectPiezeIndex) preIndex) "-" (substring positions (+ preIndex 1) (string-length positions))) 0)
                )
                (PlayGame positions #\L 0 #\L 0 0 0 0 0)
            )
            (if (equal? (string-ref positions selectPiezeIndex) #\-)
                (if (equal? key #\T)
                    (DrawPiezes (string-append (substring positions 0 preIndex) "-" (substring positions (+ 1 preIndex) selectPiezeIndex) "T" (substring positions (+ selectPiezeIndex 1) (string-length positions))) 0)
                    (DrawPiezes (string-append (substring positions 0 preIndex) "-" (substring positions (+ 1 preIndex) selectPiezeIndex) "t" (substring positions (+ selectPiezeIndex 1) (string-length positions))) 0)
                )
                (PlayGame positions #\L 0 #\L 0 0 0 0 0)
            )
        )
        (void)
    )
)
(define (MovePeon positions selectPiezeIndex preIndex key preX posX preY posY)
    (if (equal? key #\P)
        (begin
            (if (and (< preIndex 16) (= selectPiezeIndex (+ preIndex 16)))
                (if (equal? (string-ref positions selectPiezeIndex) #\-)
                    (DrawPiezes (string-append (substring positions 0 preIndex) "-" (substring positions (+ 1 preIndex) selectPiezeIndex) "P" (substring positions (+ selectPiezeIndex 1) (string-length positions))) 0)
                    (PlayGame positions #\L 0 #\L 0 preX posX preY posY)
                )
                (void)
            )
            (if (= selectPiezeIndex (+ preIndex 8))
                (if (equal? (string-ref positions selectPiezeIndex) #\-)
                    (DrawPiezes (string-append (substring positions 0 preIndex) "-" (substring positions (+ 1 preIndex) selectPiezeIndex) "P" (substring positions (+ selectPiezeIndex 1) (string-length positions))) 0)
                    (PlayGame positions #\L 0 #\L 0 preX posX preY posY)
                )
                (begin
                    (print "movimiento no permitido")
                    (GetPosition positions 0 #\L 0 0)
                )
            )
        )
        (begin
            (if (and (> preIndex 46) (< preIndex 56) (= selectPiezeIndex (- preIndex 16)))
                (if (equal? (string-ref positions selectPiezeIndex) #\-)
                    (DrawPiezes (string-append (substring positions 0 selectPiezeIndex) "p" (substring positions (+ 1 selectPiezeIndex) preIndex) "-" (substring positions (+ preIndex 1) (string-length positions))) 0)
                    (PlayGame positions #\L 0 #\L 0 preX posX preY posY)
                )
                (void)
            )
            (if (= selectPiezeIndex (- preIndex 8))
                (if (equal? (string-ref positions selectPiezeIndex) #\-)
                    (DrawPiezes (string-append (substring positions 0 selectPiezeIndex) "p" (substring positions (+ 1 selectPiezeIndex) preIndex) "-" (substring positions (+ preIndex 1) (string-length positions))) 0)
                    (PlayGame positions #\L 0 #\L 0 preX posX preY posY)
                )
                (begin
                    (print "movimiento no permitido")
                    (GetPosition positions 0 #\L)
                )
            )
        )
    )
)
(DrawPiezes "TCARYACTPPPPPPPP--------------------------------pppppppptcaryact" 0)